Part : <./Data/ships/terran/base_part_terran.rules>/Part
       <../cables.rules>/Part
{
	NameKey = "Parts/DiodeConnector"
	IconNameKey = "Parts/DiodeConnectorIcon"
	ID = YBJ.MMCTDiodeConnector
	EditorGroup = "Power"
	DescriptionKey = "Parts/DiodeConnectorDesc"
	Resources
	[
		[coil, 3]
		[steel, 6]
	]
	TypeCategories = [cable, cable_receptor]
	ReceivableBuffs : ^/0/ReceivableBuffs [MMCTCableCable]
	Size = [1, 1]
	MaxHealth = 1000
    EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}
	AllowedDoorLocations [] // No doors
    Components : ^/0/Components
	{

		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorageDown]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

        BuffProvider
		{
			Type = AreaBuffProvider
            BuffArea = [0, -1, 1, 1]
			BuffType = MMCTCableReceptor
			OperationalToggle = PowerToggle
			Criteria {
			    Categories = [uses_power, cable_receptor, cable]
			}
		}
		BuffProviderPowerStorage : &BuffProvider
		{
			Criteria {
			    Category = power_storage
			}
		}

        //TODO: power can transfer only from down to up, no other direction is allowed.
        RealBatteryStorageDown = &<../cables.rules>/Part/Components/RealBatteryStorageDown
        BatteryStorageDown : &<../cables.rules>/Part/Components/BatteryStorageDown
		{
			ResourceStorages = [RealBatteryStorageDown, ProxyCapacitorDown, ProxyPowerSourceDown]
		}
        ProxyCapacitorDown = &<../cables.rules>/Part/Components/ProxyCapacitorDown
        ProxyCapacitorUp = &<../cables.rules>/Part/Components/ProxyCapacitorUp
        ProxyBatteryStorageUp = &<../cables.rules>/Part/Components/ProxyBatteryStorageUp
        ProxyPowerSinkUp : &<../cables.rules>/Part/Components/ProxyBatteryStorageUp
        {
            ProxyableComponents
            [
                {
                    PartCriteria
                    {
                        Category = uses_power
                    }
                    ComponentID = BatteryStorage
                }
            ]
        }
		ProxyPowerSourceDown : &<../cables.rules>/Part/Components/ProxyBatteryStorageDown
        {
            ProxyableComponents
            [
                {
                    PartCriteria
                    {
                        Category = provides_power
                    }
                    ComponentID = BatteryStorage
                }
            ]
        }

        CombinedBatteryStorageUp
        {
            Type = MultiResourceStorage
            ResourceType = battery
            AddMode = InOrder
            RemoveMode = InOrder
            ResourceStorages = [ProxyPowerSinkUp, ProxyBatteryStorageUp, ProxyCapacitorUp]
        }

        MoveBatteryPowerFromDown
        {
            Type = ResourceConverter
            FromStorage = BatteryStorageDown
            FromQuantity = &~/Part/transferQuantity
            ToStorage = CombinedBatteryStorageUp
            ToQuantity = &~/Part/transferQuantity
            Interval = &~/Part/transferInterval
            OperationalToggle = IsOperational
            MinToQuantityForConversion = &~/Part/transferQuantity
            MinFromQuantityForConversion = &~/Part/transferQuantity
        }
        
        // TODO
        Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
		}

        // TODO
		AmmoSprites
		{
			Type = ResourceSprites
			Location = [.5, .5]
			ResourceStorage = BatteryStorageDown
			Layer = "doodads_high"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "doodads_operational.png"
					Size = [1, 1]
				}
			]
		}

        Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Out of power.
				{
					Toggle = BatteryStorageDown
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [0.5, 0.5]
					}
				}
			]
		}
		
		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}

    }
    Stats : ^/1/Stats
	{
		MMCTSupplyDistanceL = 1
	}
}