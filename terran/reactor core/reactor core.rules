Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/ReactorCore"
	IconNameKey = "Parts/ReactorCoreIcon"
	ID = YBJ.MMCTreactorcore // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Power"
	DescriptionKey = "Parts/ReactorCoreDesc"
	Resources
	[
		[steel, 32]
		[coil, 80]
		[coil2, 4]
		[enriched_uranium, 16]
	]
	AIValueFactor = 5
	Size = [1, 2]
	MaxHealth = 1000
	TypeCategories = [reactor, provides_power, modular_reactor, thermal_source]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	AllowedDoorLocations
	[
		[0, 2]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 64]
	}
	Components : ^/0/Components
	{

		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, HeatStorage]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 1
		}
		
		ProxyHeatStorageUp = &<../thermal.rules>/ProxyHeatStorageUp

		HeatStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = (&../HeatGeneration/ToQuantity) * 3
			StartingResources = &MaxResources
			IncludeWhenUnderConstruction = false
		}
		
		HeatGeneration
		{
			Type = ResourceConverter
			ToStorage = HeatStorage
			ToQuantity = 1400
			Interval = 0.1
			OperationalToggle = PowerToggle
		}
		
		ThermalDelivery
		{
			Type = ResourceConverter
			FromStorage = HeatStorage
			FromQuantity = 1500
			ToStorage = ProxyHeatStorageUp
			ToQuantity = 1500
			Interval = 0.1
		}

		BuffProvider
		{
			Type = AreaBuffProvider
			BuffType = MMCTHeat
			BuffArea = [0, -1, 1, 1]
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 2]
					}
					{
						File = "floor_33.png"
						Size = [1, 2]
					}
					{
						File = "floor_66.png"
						Size = [1, 2]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads.png"
						Size = [1, 2]
					}
					{
						File = "doodads_33.png"
						Size = [1, 2]
					}
					{
						File = "doodads_66.png"
						Size = [1, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 2]
					}
					{
						File = "walls_33.png"
						Size = [1, 2]
					}
					{
						File = "walls_66.png"
						Size = [1, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 2]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 2]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 2]
					}
				]
			}
		}
		
		AmmoSprites
		{
			Type = ResourceSprites
			Location = [0.5, 1]
			ResourceStorage = HeatStorage
			Layer = "doodads_high"
			HasZeroResourceSprite = true
			ResourceLevels
			[
				{
					File = "batteries033.png"
					Size = [1, 2]
				}
				{
					File = "batteries066.png"
					Size = [1, 2]
				}
				{
					File = "batteries1.png"
					Size = [1, 2]
				}
			]
		}

		DestroyedEffects
		{
			Type = DeathEffects
			Location = [0.5, 1]
			IncludeWhenUnderConstruction = false

			MediaEffects
			[
				&<./Data/common_effects/particles/explosions/med_part_explode.rules>
				&<./Data/common_effects/particles/explosions/med_part_explode_debris.rules>
				&<./Data/common_effects/particles/explosions/big_part_explode_smoke.rules>

				: /BASE_SHAKE
				{
					ShakeAmount = .25
					Duration = 2
				}
			]

			FactorHitEffectsWith = HeatStorage
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 16000
					Radius = 4
					Delay = .05
					ExpandDuration = .1
					ExpandStartRadius = 2
					ExpandLoss = 100%
					FireChancePerNDamage = 100%
					ImpulsePerNDamage = 10
					NDamage = 8000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 16000
					Radius = 2
					Delay = .05
					ExpandDuration = .05
					ExpandStartRadius = 2
					ExpandLoss = 100%
					ImpulsePerNDamage = 5
					NDamage = 4000
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 2]
		}
	}
	
	Stats
	{
		MMCTThermalGeneration = 1 / (&~/Part/Components/HeatGeneration/Interval) * (&~/Part/Components/HeatGeneration/ToQuantity) / 100
		MMCTThermalCapacity = (&~/Part/Components/HeatStorage/MaxResources) / 100
		MMCTPowerBandwidth = 1/ (&~/Part/Components/ThermalDelivery/Interval) * (&~/Part/Components/ThermalDelivery/ToQuantity) / 100
	}
}
