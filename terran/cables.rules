Part
{
    // Variables
    batteryStorageMax = 2000 // This has to be kept small so PrioritizeMostEmptyCapacity works correctly and does not try to just feed self endlessly.
                             // Please make PrioritizeMostEmptyCapacityPercentage, this would fix so many issues here...
    transferQuantity = 1000 / 2 // Faster and smaller transfers perform better here.
    transferInterval = 0.0625 / 2 // This means each cable procs 4*32 times every second and substations proc 5*32 times per second, each...

    Components
    {
        // Toggles
        IsOperational
		{
			Type = MultiToggle
			Toggles = [BatteryStorage]
			Mode = All
		}

        CanProvideBatteryPower
        {
            Type = ThresholdToggle
            ValueFrom = BatteryStorage
            MinAmount = 0
        }

        // IsProxyBatteryUpEmptyish
        // {
        //     Type = ThresholdToggle
        //     ValueFrom = CombinedBatteryStorageNotDown
        //     MinAmount = 0
        //     MaxAmount = (&~/Part/batteryStorageMax) - (&~/Part/transferQuantity)
        // }
        // IsProxyBatteryUpEmptyishMaxRef
        // {
        //     Type = ThresholdToggle
        //     ValueFrom = CombinedBatteryStorageNotDown
        //     MaxAmount = (&~/Part/Components/CombinedBatteryStorageNotDown/MaxResources) - (&~/Part/transferQuantity)
        // }
        // IsProxyBatteryDownEmptyish
        // {
        //     Type = ThresholdToggle
        //     ValueFrom = CombinedBatteryStorageNotUp
        //     MaxAmount = (&~/Part/batteryStorageMax) - (&~/Part/transferQuantity)
        // }
        // IsProxyBatteryLeftEmptyish
        // {
        //     Type = ThresholdToggle
        //     ValueFrom = CombinedBatteryStorageNotRight
        //     MaxAmount = (&~/Part/batteryStorageMax) - (&~/Part/transferQuantity)
        // }
        // IsProxyBatteryRightEmptyish
        // {
        //     Type = ThresholdToggle
        //     ValueFrom = CombinedBatteryStorageNotLeft
        //     MaxAmount = (&~/Part/batteryStorageMax) - (&~/Part/transferQuantity)
        // }

        // IsBatteryEmptyish
		// {
		// 	Type = ThresholdToggle
		// 	ValueFrom = BatteryStorage
		// 	MaxAmount = (&~/Part/batteryStorageMax) - (&~/Part/transferQuantity)
		// }

        // Proxies and combined storages
        // Proxies are to connected storages, to be able to find them correctly. This has more options then viaBuff storages.
        ProxyBatteryStorageUp
        {
            Type = ResourceStorageProxy
            ResourceType = battery
            PartLocation = [0, -1]
            ProxyableComponents
            [
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 0
                    }
                    ComponentID = BatteryStorageDown
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 1
                    }
                    ComponentID = BatteryStorageRight
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 2
                    }
                    ComponentID = BatteryStorageUp
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 3
                    }
                    ComponentID = BatteryStorageLeft
                }
                {
                    PartCriteria
                    {
                        Category = cable_receptor
                    }
                    ComponentID = BatteryStorage
                }
            ]
        }
        ProxyBatteryStorageDown
        {
            Type = ResourceStorageProxy
            ResourceType = battery
            PartLocation = [0, 1]
            ProxyableComponents
            [
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 0
                    }
                    ComponentID = BatteryStorageUp
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 1
                    }
                    ComponentID = BatteryStorageLeft
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 2
                    }
                    ComponentID = BatteryStorageDown
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 3
                    }
                    ComponentID = BatteryStorageRight
                }
                {
                    PartCriteria
                    {
                        Category = cable_receptor
                    }
                    ComponentID = BatteryStorage
                }
            ]
        }
        ProxyBatteryStorageLeft
        {
            Type = ResourceStorageProxy
            ResourceType = battery
            PartLocation = [-1, 0]
            ProxyableComponents
            [
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 0
                    }
                    ComponentID = BatteryStorageRight
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 1
                    }
                    ComponentID = BatteryStorageUp
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 2
                    }
                    ComponentID = BatteryStorageLeft
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 3
                    }
                    ComponentID = BatteryStorageDown
                }
                {
                    PartCriteria
                    {
                        Category = cable_receptor
                    }
                    ComponentID = BatteryStorage
                }
            ]
        }
        ProxyBatteryStorageRight
        {
            Type = ResourceStorageProxy
            ResourceType = battery
            PartLocation = [1, 0]
            ProxyableComponents
            [
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 0
                    }
                    ComponentID = BatteryStorageLeft
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 1
                    }
                    ComponentID = BatteryStorageDown
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 2
                    }
                    ComponentID = BatteryStorageRight
                }
                {
                    PartCriteria
                    {
                        Category = cable
                        Rot = 3
                    }
                    ComponentID = BatteryStorageUp
                }
                {
                    PartCriteria
                    {
                        Category = cable_receptor
                    }
                    ComponentID = BatteryStorage
                }
            ]
        }

        // CombinedStorages are targets to be filled with power
        CombinedBatteryStorageNotUp
        {
            Type = MultiResourceStorage
            ResourceType = battery
            AddMode = PrioritizeMostEmptyCapacity
            ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
            ResourceStorages = [ProxyBatteryStorageDown, ProxyBatteryStorageLeft, ProxyBatteryStorageRight]
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }
        CombinedBatteryStorageNotDown
        {
            Type = MultiResourceStorage
            ResourceType = battery
            AddMode = PrioritizeMostEmptyCapacity
            ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
            ResourceStorages = [ProxyBatteryStorageUp, ProxyBatteryStorageLeft, ProxyBatteryStorageRight]
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }
        CombinedBatteryStorageNotLeft
        {
            Type = MultiResourceStorage
            ResourceType = battery
            AddMode = PrioritizeMostEmptyCapacity
            ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
            ResourceStorages = [ProxyBatteryStorageUp, ProxyBatteryStorageDown, ProxyBatteryStorageRight]
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }
        CombinedBatteryStorageNotRight
        {
            Type = MultiResourceStorage
            ResourceType = battery
            AddMode = PrioritizeMostEmptyCapacity
            ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
            ResourceStorages = [ProxyBatteryStorageUp, ProxyBatteryStorageDown, ProxyBatteryStorageLeft]
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }

        BatteryStorage
        {
            Type = MultiResourceStorage
            ResourceType = battery
            AddMode = PrioritizeMostEmptyCapacity // DistributeEvenly was here.
            RemoveMode = PrioritizeMostResources
            ResourceStorages = [BatteryStorageUp, BatteryStorageDown, BatteryStorageLeft, BatteryStorageRight]
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }

        // Real storages		
        BatteryStorageUp
        {
            Type = ResourceStorage
            ResourceType = battery
            MaxResources = &~/Part/batteryStorageMax
            IncludeWhenUnderConstruction = false
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }
        BatteryStorageDown
        {
            Type = ResourceStorage
            ResourceType = battery
            MaxResources = &~/Part/batteryStorageMax
            IncludeWhenUnderConstruction = false
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }
        BatteryStorageLeft
        {
            Type = ResourceStorage
            ResourceType = battery
            MaxResources = &~/Part/batteryStorageMax
            IncludeWhenUnderConstruction = false
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }
        BatteryStorageRight
        {
            Type = ResourceStorage
            ResourceType = battery
            MaxResources = &~/Part/batteryStorageMax
            IncludeWhenUnderConstruction = false
            ToggleOnResources = (&~/Part/transferQuantity)
			ToggleOffResources = (&ToggleOnResources) - 1
        }

        // Workers
        MoveBatteryPowerFromUp
        {
            Type = ResourceConverter
            FromStorage = BatteryStorageUp
            FromQuantity = &~/Part/transferQuantity
            ToStorage = CombinedBatteryStorageNotUp
            ToQuantity = &~/Part/transferQuantity
            Interval = &~/Part/transferInterval
            OperationalToggle = IsOperational
            MinToQuantityForConversion = &~/Part/transferQuantity
            MinFromQuantityForConversion = &~/Part/transferQuantity
        }
        MoveBatteryPowerFromDown
        {
            Type = ResourceConverter
            FromStorage = BatteryStorageDown
            FromQuantity = &~/Part/transferQuantity
            ToStorage = CombinedBatteryStorageNotDown
            ToQuantity = &~/Part/transferQuantity
            Interval = &~/Part/transferInterval
            OperationalToggle = IsOperational
            MinToQuantityForConversion = &~/Part/transferQuantity
            MinFromQuantityForConversion = &~/Part/transferQuantity
        }
        MoveBatteryPowerFromLeft
        {
            Type = ResourceConverter
            FromStorage = BatteryStorageLeft
            FromQuantity = &~/Part/transferQuantity
            ToStorage = CombinedBatteryStorageNotLeft
            ToQuantity = &~/Part/transferQuantity
            Interval = &~/Part/transferInterval
            OperationalToggle = IsOperational
            MinToQuantityForConversion = &~/Part/transferQuantity
            MinFromQuantityForConversion = &~/Part/transferQuantity
        }
        MoveBatteryPowerFromRight
        {
            Type = ResourceConverter
            FromStorage = BatteryStorageRight
            FromQuantity = &~/Part/transferQuantity
            ToStorage = CombinedBatteryStorageNotRight
            ToQuantity = &~/Part/transferQuantity
            Interval = &~/Part/transferInterval
            OperationalToggle = IsOperational
            MinToQuantityForConversion = &~/Part/transferQuantity
            MinFromQuantityForConversion = &~/Part/transferQuantity
        }
    }

    Stats {
        MMCTPowerBandwidth = 1 / (&~/Part/transferInterval) * (&~/Part/transferQuantity) / 1000
        PowerCapacity = (&~/Part/batteryStorageMax) / 1000
    }
}
